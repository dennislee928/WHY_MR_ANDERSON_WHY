services:
  # Pandora Box Console IDS-IPS Agent
  pandora-agent:
    build:
      context: ..
      dockerfile: Application/docker/agent.dockerfile
    container_name: pandora-agent
    restart: unless-stopped
    privileged: true  # 需要網路管理權限
    network_mode: host
    environment:
      - LOG_LEVEL=info
      - DEVICE_PORT=/dev/ttyUSB0
      - GRAFANA_URL=http://grafana:3000
      - PROMETHEUS_URL=http://prometheus:9090
      - LOKI_URL=http://loki:3100
      - MTLS_CERT_PATH=/certs/client.crt
      - MTLS_KEY_PATH=/certs/client.key
    volumes:
      - /dev:/dev
      - ./certs:/certs:ro
      - ../configs/agent-config.yaml:/app/agent-config.yaml:ro
      - pandora-data:/app/data
    depends_on:
      - prometheus
      - loki
      - grafana
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Axiom Backend V3 (Go API Server) - 企業級統一管理平台
  axiom-be:
    build:
      context: ..
      dockerfile: Application/docker/axiom-be.dockerfile
    container_name: axiom-be-v3
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      # 基礎配置
      - PORT=3001
      - LOG_LEVEL=info
      
      # PostgreSQL (V3 使用獨立環境變量)
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=pandora
      - POSTGRES_PASSWORD=pandora123
      - POSTGRES_DB=pandora_db
      
      # Redis (V3 使用獨立環境變量)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=pandora123
      - REDIS_DB=0
      
      # 外部服務 URLs
      - PROMETHEUS_URL=http://prometheus:9090
      - GRAFANA_URL=http://grafana:3000
      - LOKI_URL=http://loki:3100
      - QUANTUM_URL=http://cyber-ai-quantum:8000
      - NGINX_URL=http://nginx:80
      - NGINX_CONFIG_PATH=/etc/nginx/nginx.conf
      
      # V3 新功能配置
      - AGENT_HEARTBEAT_INTERVAL=30
      - HOT_STORAGE_RETENTION=1h
      - COLD_STORAGE_RETENTION=90d
      - PII_DETECTION_ENABLED=true
      - AUTO_ANONYMIZATION=false
    volumes:
      - axiom-logs:/app/logs
      - axiom-data:/app/data
    depends_on:
      - postgres
      - redis
      - prometheus
      - loki
      - cyber-ai-quantum
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Axiom UI Server (Legacy - Frontend + Backend combined)
  axiom-ui:
    build:
      context: ..
      dockerfile: Application/docker/ui.patr.dockerfile
    container_name: axiom-ui-legacy
    restart: unless-stopped
    ports:
      - "3002:3001"
    environment:
      - LOG_LEVEL=info
      - PROMETHEUS_URL=http://prometheus:9090
      - GRAFANA_URL=http://grafana:3000
    volumes:
      - ./Fe:/app/web:ro
      - ../configs/ui-config.yaml:/app/ui-config.yaml:ro
    depends_on:
      - axiom-be
      - pandora-agent
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - legacy

  # Prometheus - 指標收集與儲存
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ../configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../configs/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Loki - 日誌聚合
  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ../configs/loki.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail - 日誌收集器
  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ../configs/promtail-paas.yaml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - promtail-positions:/app/data
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  # Grafana - 視覺化與儀表板
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pandora123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
    volumes:
      - ../configs/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ../configs/grafana/provisioning:/etc/grafana/provisioning:ro
      - ../configs/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AlertManager - 告警管理
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ../configs/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter - 系統指標收集
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  # Redis - 快取與會話儲存
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass pandora123
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=pandora
      - RABBITMQ_DEFAULT_PASS=pandora123
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ../configs/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ../configs/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cyber AI/Quantum Security Service
  cyber-ai-quantum:
    build:
      context: ..
      dockerfile: Experimental/cyber-ai-quantum/Dockerfile
    container_name: cyber-ai-quantum
    restart: unless-stopped
    ports:
      - "8000:8000"
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    extra_hosts:
      - "auth.quantum-computing.ibm.com:104.17.36.225"
      - "api.quantum-computing.ibm.com:104.17.36.225"
    environment:
      - LOG_LEVEL=info
      - ML_MODEL_PATH=/app/models
      - QUANTUM_KEY_SIZE=256
      - RABBITMQ_URL=amqp://pandora:pandora123@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://pandora:pandora123@postgres:5432/pandora_db
      - ZERO_TRUST_ENABLED=true
      - QUANTUM_HYBRID_MODE=true
      - AUTO_RESPONSE_ENABLED=false
      - PREDICTION_THRESHOLD=0.7
      - RL_LEARNING_RATE=0.1
      - QUANTUM_DIMENSIONS=10
      # 新增：量子機器學習相關環境變數
      - IBM_QUANTUM_TOKEN=${IBM_QUANTUM_TOKEN:-}
      - USE_SIMULATOR=${USE_SIMULATOR:-false}
      - CLASSIFICATION_THRESHOLD=0.5
    volumes:
      - ai-models:/app/models
      - ai-logs:/app/logs
      - ai-data:/app/data
      - ai-results:/app/results
      - ai-qasm:/app/qasm_output
      - ./data/zero_trust:/app/data/zero_trust
      - ./data/windows_logs:/app/data/windows_logs
      - ./models/quantum:/app/models/quantum
    depends_on:
      - rabbitmq
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL - 關聯式資料庫
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=pandora
      - POSTGRES_USER=pandora
      - POSTGRES_PASSWORD=pandora123
    volumes:
      - ../configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pandora"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx - 反向代理
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../configs/nginx/default-paas.conf:/etc/nginx/nginx.conf:ro
      - ../configs/nginx/ssl:/etc/nginx/ssl:ro
      - ./Fe/public:/var/www/static:ro
    depends_on:
      - grafana
      - axiom-be
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://127.0.0.1:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Portainer - 容器管理平台
  portainer:
    image: portainer/portainer-ce:2.19.4
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data
    environment:
      - PORTAINER_HTTP_ENABLED=true
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # n8n - 工作流自動化與整合平台
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=pandora123
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://n8n:5678/
      - GENERIC_TIMEZONE=Asia/Taipei
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=pandora_n8n
      - DB_POSTGRESDB_USER=pandora
      - DB_POSTGRESDB_PASSWORD=pandora123
    volumes:
      - n8n-data:/home/node/.n8n
    depends_on:
      - postgres
      - rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  pandora-data:
    driver: local
  promtail-positions:
    driver: local
  prometheus-data:
    driver: local
  loki-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local
  axiom-logs:
    driver: local
  axiom-data:
    driver: local
  ai-models:
    driver: local
  ai-logs:
    driver: local
  ai-data:
    driver: local
  ai-results:
    driver: local
  ai-qasm:
    driver: local
  postgres-data:
    driver: local
  portainer-data:
    driver: local
  n8n-data:
    driver: local

networks:
  default:
    name: pandora-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
