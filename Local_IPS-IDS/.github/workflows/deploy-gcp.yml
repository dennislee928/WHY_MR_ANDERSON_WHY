name:  (Temporaryly Disavbled)Deploy to GCP

on:
  # 此 workflow 已停用（僅用於 main 分支的雲端部署）
  # dev 分支使用地端部署，不需要 GCP
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  GCP_ZONE: us-central1-a
  GCP_REGISTRY: gcr.io/${{ secrets.GCP_PROJECT_ID }}

jobs:
  # 建置並推送 Docker 映像到 GCR
  build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.GCP_REGISTRY }}/pandora-agent
          ${{ env.GCP_REGISTRY }}/pandora-console
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Agent image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./build/docker/agent.dockerfile
        push: true
        tags: |
          ${{ env.GCP_REGISTRY }}/pandora-agent:${{ github.sha }}
          ${{ env.GCP_REGISTRY }}/pandora-agent:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Console image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./build/docker/server-be.dockerfile
        push: true
        tags: |
          ${{ env.GCP_REGISTRY }}/pandora-console:${{ github.sha }}
          ${{ env.GCP_REGISTRY }}/pandora-console:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # 部署到 GCP Kubernetes (GKE)
  deploy-gcp:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.environment || 'production' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ secrets.GCP_CLUSTER_NAME }} \
          --zone ${{ env.GCP_ZONE }} \
          --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Update image tags in GCP manifests
      run: |
        find deployments/kubernetes/gcp/ -name "*.yaml" -exec sed -i "s|gcr.io/YOUR_PROJECT_ID|${{ env.GCP_REGISTRY }}|g" {} \;
        find deployments/kubernetes/gcp/ -name "*.yaml" -exec sed -i "s|:latest|:${{ github.sha }}|g" {} \;

    - name: Deploy to GKE
      run: |
        kubectl apply -k deployments/kubernetes/gcp/
        kubectl rollout status deployment/pandora-agent -n pandora-box --timeout=300s
        kubectl rollout status deployment/pandora-console -n pandora-box --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods -n pandora-box
        kubectl get services -n pandora-box
        kubectl get ingress -n pandora-box

    - name: Health check
      run: |
        echo "等待服務啟動..."
        sleep 30
        kubectl get pods -n pandora-box
        echo "部署完成！"

  # 部署前端到 Vercel (GCP 環境)
  deploy-vercel-gcp:
    runs-on: ubuntu-latest
    needs: deploy-gcp
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build frontend for GCP
      run: npm run build
      env:
        NEXT_PUBLIC_API_BASE_URL: ${{ secrets.VERCEL_API_BASE_URL_GCP }}
        NEXT_PUBLIC_GRAFANA_URL: ${{ secrets.VERCEL_GRAFANA_URL_GCP }}
        NEXT_PUBLIC_PROMETHEUS_URL: ${{ secrets.VERCEL_PROMETHEUS_URL_GCP }}

    - name: Deploy to Vercel (GCP Environment)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_GCP }}
        vercel-args: '--prod'
        working-directory: ./

  # 最終檢查
  final-check:
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-gcp, deploy-vercel-gcp]
    if: always()
    steps:
    - name: GCP Deployment Summary
      run: |
        echo "🎉 GCP 部署完成！"
        echo "- 映像建置: ${{ needs.build-and-push.result }}"
        echo "- GCP 部署: ${{ needs.deploy-gcp.result }}"
        echo "- Vercel 部署: ${{ needs.deploy-vercel-gcp.result }}"
        echo ""
        echo "🌐 訪問網址:"
        echo "- 前端: https://pandora-gcp.yourdomain.com"
        echo "- Grafana: https://pandora-gcp.yourdomain.com/grafana"
        echo "- Prometheus: https://pandora-gcp.yourdomain.com/prometheus"
