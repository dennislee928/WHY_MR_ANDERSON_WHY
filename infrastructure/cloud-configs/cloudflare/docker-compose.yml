version: '3.8'

services:
  # Backend API Container
  backend-api:
    build:
      context: ./containers/backend-api
      dockerfile: Dockerfile
    container_name: security-backend-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://security_user:secure_password_change_me@database:5432/security_platform
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - security-network

  # AI/Quantum Processing Container
  ai-quantum:
    build:
      context: ./containers/ai-quantum
      dockerfile: Dockerfile
    container_name: security-ai-quantum
    ports:
      - "8000:8000"
    environment:
      - PYTHON_ENV=production
      - PORT=8000
      - DATABASE_URL=postgresql://security_user:secure_password_change_me@database:5432/security_platform
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - security-network

  # Security Tools Container
  security-tools:
    build:
      context: ./containers/security-tools
      dockerfile: Dockerfile
    container_name: security-tools
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgresql://security_user:secure_password_change_me@database:5432/security_platform
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - security-network

  # Database Container
  database:
    build:
      context: ./containers/database
      dockerfile: Dockerfile
    container_name: security-database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=security_platform
      - POSTGRES_USER=security_user
      - POSTGRES_PASSWORD=secure_password_change_me
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./containers/database/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U security_user -d security_platform"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - security-network

  # Monitoring Container
  monitoring:
    build:
      context: ./containers/monitoring
      dockerfile: Dockerfile
    container_name: security-monitoring
    ports:
      - "9090:9090"
      - "3001:3001"
    environment:
      - PROMETHEUS_PORT=9090
      - GRAFANA_PORT=3001
    volumes:
      - prometheus_data:/prometheus
      - ./containers/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./containers/monitoring/rules:/etc/prometheus/rules
    depends_on:
      - backend-api
      - ai-quantum
      - security-tools
      - database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - security-network

  # Load Balancer (Nginx)
  load-balancer:
    image: nginx:alpine
    container_name: security-load-balancer
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend-api
      - ai-quantum
      - security-tools
      - monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - security-network

volumes:
  postgres_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  security-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
